<?xml version="1.0"?>
<!-- OPML generated by Emacs 26.3 (Org mode 9.2.6) on qua, 23 out 2019 13:09:32 GMT -->
<opml version="2.0">
  <head>
    <title>Emacs init file</title>
    <ownerName>Vagner Rener</ownerName>
    <ownerEmail>vagnerrener@gmail.com</ownerEmail>
    <dateModified>qua, 23 out 2019 13:03:59 GMT</dateModified>
    <dateCreated>qua, 23 out 2019 13:09:32 GMT</dateCreated>
    <generator>https://github.com/org-opml</generator>
    <docs>http://dev.opml.org/spec2.html</docs>
  </head>
  <body>
    <outline text="&quot;:tangle yes&quot; will automatically create a better &quot;emacs.el&quot; which is good for debugging emacs" structure="paragraph"/>
    <outline text="Emacs commands" structure="headline"/>
    <outline text="Emacspeak" structure="headline">
      <outline text="https://tvraman.github.io/emacspeak/manual/Emacspeak-Commands-And-Options.html#Emacspeak-Commands-And-Options see https://tvraman.github.io/emacspeak/manual/emacspeak_002dwizards.html#emacspeak_002dwizards M-x emacs-learn-emacs-mode asks and speaks commands for you to hear" structure="paragraph"/>
      <outline text="eloud-mode is a good option for emacspeak" structure="paragraph"/>
    </outline>
    <outline text="Bind M-(Alt)-x to &quot;C-x C-m&quot;" structure="headline"/>
    <outline text="Emacs Config" structure="headline">
      <outline text=";;;;;;;;;;;;;;;;;;;;;;;;;" structure="paragraph"/>
      <outline text=";; $HOME/.emacs file ;; Create a file with this content to your $HOME/.emacs ;; Added by Package.el. This must come before configurations of ;; installed packages. Don't delete this line. If you don't want it, ;; just comment it out by adding a semicolon to the start of the line. ;; You may delete these explanatory comments. ;; See package &quot;auto-install&quot; bellow, if you have no internet access" structure="paragraph"/>
      <outline text=";; Speed up emacs (setq gc-cons-threshold (* 100 1024 1024))" structure="paragraph"/>
      <outline text=";; use-package" structure="paragraph"/>
      <outline text="(package-initialize)" structure="paragraph"/>
      <outline text=";; (require 'package)" structure="paragraph"/>
      <outline text="(setq package-enable-at-startup nil) ;; (add-to-list 'package-archives '(&quot;gnu&quot; . &quot;http://elpa.gnu.org/packages/&quot;)) (add-to-list 'package-archives '(&quot;gnu&quot; . &quot;http://mirrors.163.com/elpa/gnu/&quot;)) (add-to-list 'package-archives   '(&quot;melpa&quot; . &quot;https://melpa.org/packages/&quot;)) (add-to-list 'package-archives   '(&quot;melpa2&quot; . &quot;http://www.mirrorservice.org/sites/melpa.org/packages/&quot;)) (add-to-list 'package-archives   '(&quot;melpa3&quot; . &quot;http://www.mirrorservice.org/sites/stable.melpa.org/packages/&quot;)) (add-to-list 'package-archives '(&quot;org&quot; . &quot;http://orgmode.org/elpa/&quot;))" structure="paragraph"/>
      <outline text=";; Bootstrap `use-package' (unless (package-installed-p 'use-package) (package-refresh-contents) (package-install 'use-package))" structure="paragraph"/>
      <outline text="(org-babel-load-file (expand-file-name &quot;~/.emacs.d/emacs.org&quot;))" structure="paragraph"/>
      <outline text=";; Ace-windown (global-set-key (kbd &quot;M-p&quot;) 'ace-window)" structure="paragraph"/>
      <outline text=";; eloud (add-to-list 'load-path &quot;~/.emacs.d/elpa/eloud-20190706.1707&quot;) (require 'eloud)" structure="paragraph"/>
      <outline text=";; you have to setup eloud-speech-rate and eloud-voice in ;; &quot;~/.emacs.d/elpa/eloud-20190706.1707/eloud.el&quot; ;; file and compile that - eloud-speech-rate was setup to 269" structure="paragraph"/>
      <outline text="(setq eloud-espeak-path &quot;/usr/bin/espeak&quot;) ;;(setq eloud-espeak-path &quot;/usr/bin/espeak-ng -ven-gb -s 160&quot;) ;;(setq eloud-espeak-path &quot;/usr/bin/espeak -vpt -s 150&quot;)" structure="paragraph"/>
      <outline text=";; if you want to set espeak voice default pitch, you have to ;; edit the file &quot;/usr/lib/x86_64-linux-gnu/espeak-data/voices/en&quot; ;; and other voices" structure="paragraph"/>
      <outline text="(package-initialize) (org-babel-load-file &quot;~/.emacs.d/emacs.org&quot;)" structure="paragraph"/>
      <outline text=";;;;;;;;;;;;;;;;;;;;;;;;;" structure="paragraph"/>
    </outline>
    <outline text="Emacs tutorials" structure="headline">
      <outline text="C-h t emacs tutorial http://ergoemacs.org/emacs/elisp.html#float98228 - Xah Lee https://cestlaz.github.io/stories/emacs/ https://github.com/zamansky/using-emacs/blob/master/myinit.org http://www.jesshamrick.com/2012/09/10/absolute-beginners-guide-to-emacs/" structure="paragraph"/>
    </outline>
    <outline text="Org-mode tutorials" structure="headline">
      <outline text="https://orgmode.org/worg/org-tutorials/" structure="paragraph"/>
    </outline>
    <outline text="Package" structure="headline">
      <outline text="this config is already in $HOME/.emacs" structure="paragraph"/>
    </outline>
    <outline text="Use-package" structure="headline"/>
    <outline text="Speed up Emacs" structure="headline"/>
    <outline text="Buffer" structure="headline">
      <outline text="have your emacs window to always show your system-name and the full path of the buffer your currently editing :" structure="paragraph"/>
    </outline>
    <outline text="Auto-completion" structure="headline">
      <outline text="Auto-complete - global" structure="headline">
        <outline text="Use auto-complete or company-mode, but NOT the two of them" structure="paragraph"/>
      </outline>
      <outline text="Completion" structure="headline">
        <outline text="(global-set-key [tab] 'indent-or-expand) (defun indent-or-expand () &quot;Either indent according to mode, or expand the word preceding point.&quot; (interactive) (if (or   (eq last-command 'self-insert-command)   (eq last-command 'dabbrev-expand))   (progn   (setq this-command 'dabbrev-expand)   (dabbrev-expand nil))   (indent-according-to-mode)))" structure="paragraph"/>
        <outline text="#+END_SRC" structure="paragraph"/>
      </outline>
      <outline text="Company-mode" structure="headline">
        <outline text="Use company-mode or auto-complete, but NOT the two of them apt install clang8 libclang1-8 company-mode and company-shell C-c C-m list-packages - then install with &quot;i-x&quot; You have to enable the below add-hook, if you want company-mode auto-complete" structure="paragraph"/>
        <outline text="https://github.com/company-mode/company-mode/wiki/Switching-from-AC https://emacs.stackexchange.com/questions/14955/my-company-package-cant-auto-complete-the-keywords-of-c-c" structure="paragraph"/>
      </outline>
    </outline>
    <outline text="Org-mode" structure="headline">
      <outline text="https://orgmode.org/worg/org-tutorials/orgtutorial_dto-pt.html https://orgmode.org/manual/index.html" structure="paragraph"/>
      <outline text="The new way of adding easy-templates is by calling them with C-c C-, org-insert-structure-template" structure="paragraph"/>
      <outline text="org-auto-complete M-x org-ac/setup-current-buffer" structure="paragraph"/>
    </outline>
    <outline text="TAB completion on emacs console" structure="headline">
      <outline text=";; you have to put this BEFORE (require 'evil)" structure="paragraph"/>
    </outline>
    <outline text="Evil collection" structure="headline">
      <outline text=";; you have to put this BEFORE (require 'evil) ;; then you use vim-modes (normal, insert) in the minibuffer ;; evil-collection makes possible to use EWW keybindings with ;; evil-mode and corrects other emacs keybindings in evil" structure="paragraph"/>
    </outline>
    <outline text="Evil mode" structure="headline"/>
    <outline text="Eyebrowse" structure="headline">
      <outline text="this has to be placed after evil-mode call it with eyebrowse-mode https://github.com/wasamasa/eyebrowse" structure="paragraph"/>
      <outline text=" Maybe change eyebrowse configuration with the pragmaticemacs http://pragmaticemacs.com/emacs/easily-manage-emacs-workspaces-with-eyebrowse/ http://pragmaticemacs.com/emacs/use-your-digits-and-a-personal-key-map-for-super-shortcuts/" structure="paragraph"/>
    </outline>
    <outline text="Yasnippets" structure="headline">
      <outline text="M-x package-install yasnippet-snippets M-x package-install yasnippet-classic-snippets you can see their abbrevs with: M-x yas/describe-tables or you can access YASnippet &lt;-&gt; insert at point" structure="paragraph"/>
    </outline>
    <outline text="Counsel Ivy and Swiper" structure="headline"/>
    <outline text="El-get" structure="headline"/>
    <outline text="Auto-package-update" structure="headline"/>
    <outline text="Abbreviations" structure="headline">
      <outline text="http://endlessparentheses.com/ispell-and-abbrev-the-perfect-auto-correct.html https://www.oreilly.com/library/view/learning-gnu-emacs/1565921526/ch04s04.html" structure="paragraph"/>
    </outline>
    <outline text="All-the-icons" structure="headline">
      <outline text="M-x all-the-icons-install-fonts" structure="paragraph"/>
    </outline>
    <outline text="Bug-hunter" structure="headline"/>
    <outline text="Eshell" structure="headline">
      <outline text="https://invidio.us/watch?v=RhYNu6i_uY4 http://howardism.org/Technical/Emacs/eshell-present.html Globbin filters C-c M-q (eshell-display-predicate-help) C-c M-m (eshell-display-modifier-help)" structure="paragraph"/>
    </outline>
    <outline text="Helm" structure="headline">
      <outline text="NOTE: REMOVE &quot;~/.emacs.d/elpa/helm-201908(sth)&quot; package, because it will yield an error:" structure="paragraph"/>
      <outline text="&quot;Symbol's value as variable is void: helm-left-margin-width&quot;" structure="paragraph"/>
      <outline text="So that, install helm with:" structure="paragraph"/>
      <outline text="apt install elpa-helm elpa-helm-ag elpa-helm-projectile elpa-helm-rtags and its suggestions" structure="paragraph"/>
      <outline text="https://tuhdo.github.io/helm-intro.html" structure="paragraph"/>
    </outline>
    <outline text="Helm-org-rifle" structure="headline"/>
    <outline text="Beacon" structure="headline"/>
    <outline text="Bidi - bidirectional text" structure="headline">
      <outline text="you have to install &quot;emacs-bidi&quot; in elpa from github - it is not in MELPA https://github.com/emacsmirror/bidi" structure="paragraph"/>
      <outline text="Emacs Is Great - Ep 40, Hebrew/ Bidirectional text https://invidio.us/watch?v=LxuNmeCNnqU Emacs Is Great - Ep 40 pt 2, Hebrew/ Bidirectional https://invidio.us/watch?v=y3oLG-6KTaE" structure="paragraph"/>
    </outline>
    <outline text="Byte-compiling" structure="headline">
      <outline text="https://www.emacswiki.org/emacs/AutoRecompile" structure="paragraph"/>
      <outline text="Ignore byte-compile warnings" structure="paragraph"/>
    </outline>
    <outline text="Bullets" structure="headline"/>
    <outline text="Auctex" structure="headline">
      <outline text="Customary Customization, p. 1 and 16 in the manual, and http://www.emacswiki.org/emacs/AUCTeX#toc2" structure="paragraph"/>
    </outline>
    <outline text="Auto-install" structure="headline">
      <outline text="Install auto-install.el and install-elisp.el and text-translation.el https://www.emacswiki.org/emacs/AutoInstall https://www.emacswiki.org/emacs/InstallElisp https://www.emacswiki.org/emacs/TextTranslator" structure="paragraph"/>
    </outline>
    <outline text="_.emacs (init.el)" structure="headline">
      <outline text="~/.emacs (init.el)" structure="paragraph"/>
    </outline>
    <outline text="Avy navegation" structure="headline"/>
    <outline text="Agressive indent mode" structure="headline">
      <outline text="http://emacsredux.com/ aggressive-indent-mode" structure="paragraph"/>
    </outline>
    <outline text="Atomic chrome" structure="headline"/>
    <outline text="Babel languages" structure="headline">
      <outline text="http://orgmode.org/worg/org-contrib/babel/languages.html#configure" structure="paragraph"/>
      <outline text="if it does not evaluate languages, do: find ~/.emacs.d/elpa/org* -name &quot;*elc&quot; -delete - bytecode cleaning to evaluate the code-block use &quot;C-c C-c&quot;" structure="paragraph"/>
      <outline text="https://github.com/xboard/emacs-brazilian-holidays" structure="paragraph"/>
    </outline>
    <outline text="Bind-chord" structure="headline"/>
    <outline text="Brazilian-holidays" structure="headline"/>
    <outline text="Cedilha in emacs and xemacs" structure="headline">
      <outline text="Cedilha in Emacs and Xemacs" structure="paragraph"/>
      <outline text="C-c C-m set-input-method RET portuguese-prefix You need to setup your keyboard to &quot;English (international AltGr dead keys)&quot; for typing cedilla and &quot;C-\&quot; to toogle between input-methods But for typing cedilla system-wide, you need &quot;English international with dead keys&quot;" structure="paragraph"/>
      <outline text="Then customize-variable Or &quot;Alt-x customize-variable RET default-input-method Value Menu String portuguese-prefix -&gt; state - for future &quot;" structure="paragraph"/>
      <outline text="Per buffer C-c C-m set-input-method -&gt; portuguese-prefix C-c C-m list-input-methods C-c C-m describe-input-method" structure="paragraph"/>
    </outline>
    <outline text="C++" structure="headline"/>
    <outline text="Compay-emoji" structure="headline"/>
    <outline text="Centered-window" structure="headline"/>
    <outline text="Csharp mode" structure="headline"/>
    <outline text="Custom themes" structure="headline">
      <outline text="Console themes: charcoal-black cobalt dark-blue dark-erc dark-font-lock dark-gnus dark-blue2 dark-laptop doom-vibrant goldenrod graham granger gray30 green-phosphor heroku hickey hober jonadabian jonadabian-slate jsc-dark late-night lavender lethe mano-dark matrix midnight misterioso mistyday occidental odersky oswald pierson pok-wob punpun-dark parus railscast renegade resolve retro-green retro-orange robin-hood ryerson salmon-diff salmon-font-lock simple1 sitaramv-solaris slime spolsky subdued subtle-blue suscolors tango-dark tsdh-dark zenburn" structure="paragraph"/>
      <outline text="Also install &quot;doom-themes&quot; &quot;color-theme-modern&quot; and &quot;theme-looper&quot;" structure="paragraph"/>
      <outline text="you can use &quot;theme-looper-enable-random-theme&quot; use theme-looper to change emacs themes" structure="paragraph"/>
    </outline>
    <outline text="Custom-set-faces" structure="headline"/>
    <outline text="PDF tools" structure="headline">
      <outline text="Using Emacs 44 - An Org mode and PDF-tools workflow https://invidio.us/latest_version?id=LFO2UbzbZhA&amp;itag=43 http://cestlaz.github.io/posts/using-emacs-44-pdf https://github.com/zamansky/using-emacs" structure="paragraph"/>
      <outline text="#+BEGIN_SRC emacs-lisp" structure="paragraph"/>
      <outline text="(use-package pdf-tools :ensure t :config (pdf-tools-install))" structure="paragraph"/>
      <outline text="(use-package org-pdfview :ensure t)" structure="paragraph"/>
    </outline>
    <outline text="Deft" structure="headline"/>
    <outline text="Dired" structure="headline">
      <outline text="install dired+ with el-get-install RET dired+" structure="paragraph"/>
    </outline>
    <outline text="Dired-ranger" structure="headline">
      <outline text="These bindings are not working" structure="paragraph"/>
    </outline>
    <outline text="Ranger" structure="headline"/>
    <outline text="Default pdf-viwer" structure="headline">
      <outline text="Default pdf-viwer C-c C-m customize-variable RET org-file-apps RET (Extension pdf) under it Choose - Value Menu: Command and type &quot;evince %s&quot; - without quotes change the default pdf-viewer" structure="paragraph"/>
    </outline>
    <outline text="Default web-browser" structure="headline"/>
    <outline text="Dpaste" structure="headline"/>
    <outline text="Diatheke" structure="headline">
      <outline text="Install diatheke from here: https://github.com/emacsmirror/diatheke diatheke command-line" structure="paragraph"/>
      <outline text="Try to evaluate (diatheke-mode) with &quot;C-x e&quot; until it gives &quot;t&quot; This package is very stubborn :P" structure="paragraph"/>
    </outline>
    <outline text="Pcre2el - fix regex" structure="headline"/>
    <outline text="Wgrep for fuzy dired" structure="headline"/>
    <outline text="Dtk - another better diatheke" structure="headline">
      <outline text="https://github.com/dtk01/dtk for accessing diatheke sword modules Install diatheke, xiphos and its modules apt install diatheke xiphos See also: https://github.com/JasonFruit/diatheke.el https://github.com/alphapapa/sword-converter https://github.com/alphapapa/sword-to-org" structure="paragraph"/>
    </outline>
    <outline text="Disable Emacs-splash-screen" structure="headline"/>
    <outline text="edit-server" structure="headline">
      <outline text="M-x package-install RET edit-server https://www.emacswiki.org/emacs/Edit_with_Emacs" structure="paragraph"/>
    </outline>
    <outline text="Eldoc" structure="headline">
      <outline text="https://www.emacswiki.org/emacs/ElDoc" structure="paragraph"/>
    </outline>
    <outline text="elfeed" structure="headline">
      <outline text="http://pragmaticemacs.com/category/elfeed/" structure="paragraph"/>
      <outline text="elfeed-goodies" structure="headline"/>
      <outline text="elfeed-org" structure="headline"/>
    </outline>
    <outline text="Emacs edit firefox-chromium plugin" structure="headline"/>
    <outline text="Emacspeak" structure="headline">
      <outline text="apt-get install emacspeak emacspeak-espeak-server emacspeak-ss https://tvraman.github.io/emacspeak/ http://www.faqs.org/docs/Linux-HOWTO/Emacspeak-HOWTO.html If you have problems with emacspeak pitch sound, go to volumeicon/pasystray preferences and select &quot;linear scale&quot;, instead of &quot;logarithmic scale&quot; M-x emacs-learn-emacs-mode asks and speaks commands for you to hear" structure="paragraph"/>
    </outline>
    <outline text="Engine-mode for search the internet" structure="headline">
      <outline text="engine-mode for search the web" structure="paragraph"/>
    </outline>
    <outline text="Ensime" structure="headline">
      <outline text="https://www.47deg.com/blog/scala-development-with-emacs/" structure="paragraph"/>
    </outline>
    <outline text="Erc - irc client" structure="headline">
      <outline text="https://github.com/rememberYou" structure="paragraph"/>
    </outline>
    <outline text="Bitlbee" structure="headline">
      <outline text="https://emacs-fu.blogspot.com/2012/03/social-networking-with-bitlbee-and-erc.html" structure="paragraph"/>
    </outline>
    <outline text="Eshell" structure="headline">
      <outline text="https://www.emacswiki.org/emacs/EshellAlias" structure="paragraph"/>
    </outline>
    <outline text="ESS" structure="headline">
      <outline text="or working with polymode and R code Studio and &quot;.Rmd&quot; files for Academics" structure="paragraph"/>
      <outline text="BEGIN_SRC emacs-lisp" structure="paragraph"/>
      <outline text="(defun rmd-mode () &quot;ESS Markdown mode for rmd files&quot; (interactive) (require 'poly-R) (require 'poly-markdown) (poly-markdown+r-mode))" structure="paragraph"/>
      <outline text="END_SRC" structure="paragraph"/>
    </outline>
    <outline text="Expand region" structure="headline">
      <outline text="use &quot;C-S@&quot; to mark set and move the cursor around, So that you can select the region you want - Then copy and paste" structure="paragraph"/>
    </outline>
    <outline text="Figwheel-clojure" structure="headline">
      <outline text="Figwheel-clojure https://markhudnall.com/2016/04/25/starting-figwheel-in-emacs/" structure="paragraph"/>
    </outline>
    <outline text="Flycheck" structure="headline">
      <outline text="use flycheck-disable-checker (C-c ! x) for disabling per buffer syntax checker RET &quot;emacs-lisp&quot; and &quot;emacs-lisp-checkdoc&quot; or set &quot;global-flycheck-mode nil&quot;" structure="paragraph"/>
    </outline>
    <outline text="Flyspell" structure="headline">
      <outline text="M-x RET ispell-change-dictionary RET (brasileiro/english/espanish/espanol/ etc...)" structure="paragraph"/>
    </outline>
    <outline text="Fountain-mode - Screenwriting - plays, films, sop-operas, etc" structure="headline">
      <outline text="Screenwriting - plays, films, sop-operas, etc..." structure="paragraph"/>
    </outline>
    <outline text="Gitlab" structure="headline">
      <outline text="gitlab-token-id is your username" structure="paragraph"/>
    </outline>
    <outline text="GGtags" structure="headline">
      <outline text="apt-get install global" structure="paragraph"/>
    </outline>
    <outline text="Google-contacts" structure="headline"/>
    <outline text="Ob-translate" structure="headline"/>
    <outline text="Google-translate" structure="headline">
      <outline text="https://github.com/atykhonov/google-translate/issues/52#issuecomment-423870290 Use ~/bin/tkk_gg_transl_emacs.sh to get the ;; (list 427110 1469889687) &lt;--&gt; list tkk correct number" structure="paragraph"/>
    </outline>
    <outline text="Grasp - org-capture" structure="headline">
      <outline text="Make a bash script to start the server and install the grasp addon on firefox https://addons.mozilla.org/en-US/firefox/addon/grasp/?src=search I already have it on chromium" structure="paragraph"/>
      <outline text="https://github.com/karlicoss/grasp git clone https://github.com/karlicoss/grasp.git cd /grap/ npm install ANY_HOST=yes npm run build or TARGET=firefox npm run build Then install the extensions - addons https://github.com/karlicoss/grasp/releases and start the server: Instructions are in ~/org~/grasp" structure="paragraph"/>
    </outline>
    <outline text="Hippie-expand" structure="headline"/>
    <outline text="Helm-mu" structure="headline">
      <outline text="With helm-mu you can find contacts and write straight away to them" structure="paragraph"/>
      <outline text="Usage - prefix helm-mu Usage - prefix helm-mu-contacts" structure="paragraph"/>
    </outline>
    <outline text="Icicles" structure="headline"/>
    <outline text="Image-magick" structure="headline">
      <outline text="apt install imagemagick package-install RET eimp-mode" structure="paragraph"/>
    </outline>
    <outline text="Imaxima" structure="headline">
      <outline text="Options are: large, Large, huge, Huge" structure="paragraph"/>
    </outline>
    <outline text="Indenting lisp code blocks" structure="headline"/>
    <outline text="Input method portuguese-prefix" structure="headline">
      <outline text="C-c C-m set-input-method RET portuguese-prefix You need to setup your keyboard to &quot;English (international AltGr dead keys)&quot; for typing cedilla and &quot;C-\&quot; to toogle between input-methods" structure="paragraph"/>
      <outline text="But for typing cedilla system-wide, you need &quot;English international with dead keys&quot;" structure="paragraph"/>
    </outline>
    <outline text="Iso-accents" structure="headline">
      <outline text="http://stommel.tamu.edu/~baum/linux/LDP/HOWTO/LinuxDoc+Emacs+Ispell-HOWTO-4.html" structure="paragraph"/>
    </outline>
    <outline text="Jabber-chat-with" structure="headline"/>
    <outline text="JavaScript" structure="headline">
      <outline text="Also install jdee-server for java https://github.com/jdee-emacs/jdee https://github.com/jdee-emacs/jdee-server" structure="paragraph"/>
    </outline>
    <outline text="Key-chord" structure="headline"/>
    <outline text="Languagetool" structure="headline">
      <outline text="https://github.com/mhayashi1120/Emacs-langtool Ctrl-x m package-install RET langtool" structure="paragraph"/>
    </outline>
    <outline text="Link-hint" structure="headline"/>
    <outline text="Linum-mode" structure="headline"/>
    <outline text="Lyrics" structure="headline">
      <outline text="M-x package-install RET lyrics M-x lyrics RET M-x emms-get-lyrics-current-song" structure="paragraph"/>
    </outline>
    <outline text="Lispy" structure="headline">
      <outline text="Install lispy" structure="paragraph"/>
    </outline>
    <outline text="lorem ipsum" structure="headline"/>
    <outline text="Magit-setup" structure="headline"/>
    <outline text="Mplayer-mode" structure="headline">
      <outline text="download Mplayer.el from here: https://github.com/markhepburn/mplayer-mode" structure="paragraph"/>
    </outline>
    <outline text="Maximise emacs on startup" structure="headline"/>
    <outline text="Message-mode" structure="headline"/>
    <outline text="Mingus" structure="headline"/>
    <outline text="Misc-1" structure="headline">
      <outline text="https://www.emacswiki.org/emacs/ChangingCursorDynamically" structure="paragraph"/>
    </outline>
    <outline text="Misc-2" structure="headline"/>
    <outline text="Misc-3" structure="headline"/>
    <outline text="Multiple-cursors" structure="headline"/>
    <outline text="mu4e" structure="headline">
      <outline text="https://www.emacswiki.org/emacs/mu4e https://www.reddit.com/r/emacs/comments/bfsck6/mu4e_for_dummies/ https://zmalltalker.com/linux/mu.html http://pragmaticemacs.com/mu4e-tutorials/ http://tech.memoryimprintstudio.com/the-ultimate-emailing-agent-with-mu4e-and-emacs/" structure="paragraph"/>
      <outline text="apt install mu4e If you get sentinel error: &quot;error in process sentinel: Database empty; try indexing some messages&quot; do: mbsync -V gmail mu index --maildir=(G)gmail C-x m compose-mail C-x 5 m compose-mail-other-frame C-x 4 m compose-mail-other window mu4e-org-mode opens mu4e-org-mode message-send sends a message in mu4e-org-mode message-send-and-exit sends a message and exits in mu4e-org-mode helm-mu-contacts look for contacts to send an email See ~/anki_flashcards/mu4e_hto/ mu4e keep its contacts in ~/.mu/cache/" structure="paragraph"/>
    </outline>
    <outline text="My-save-word" structure="headline"/>
    <outline text="Oauth2" structure="headline"/>
    <outline text="Org-agenda" structure="headline"/>
    <outline text="Org-brain" structure="headline">
      <outline text="For concept maps [[https://github.com/Kungsgeten/org-brain][github]] [[ http://rwx.io/posts/org-brain/][rwx]] [[ http://www.bobnewell.net/publish/35years/orgbrain.htmlexternal_link ][Bobnewell tuto]] [[https://github.com/Kungsgeten/org-brain][Org-brain wiki page]] [[ http://blogarchive.thebrain.com/thought-relationships/external_link ][thebrain]]" structure="paragraph"/>
    </outline>
    <outline text="Org-capture with W3m/EWW" structure="headline">
      <outline text="http://www.bobnewell.net/publish/35years/webclipper.html" structure="paragraph"/>
    </outline>
    <outline text="Org-cliplink" structure="headline">
      <outline text="install org-cliplink M-x install RET org-cliplink" structure="paragraph"/>
    </outline>
    <outline text="Origami folding" structure="headline"/>
    <outline text="Ascii-art-to-unicode" structure="headline"/>
    <outline text="Org-journal" structure="headline"/>
    <outline text="Org-mac-link" structure="headline">
      <outline text="org-mac-link M-x omlg-grab-link RET" structure="paragraph"/>
    </outline>
    <outline text="Org-protocol" structure="headline">
      <outline text="https://github.com/alphapapa/org-protocol-capture-html http://www.mediaonfire.com/blog/2017_07_21_org_protocol_firefox.html open about:config in firefox and look for &quot;foo&quot; to edit or delete that entry" structure="paragraph"/>
    </outline>
    <outline text="Orca" structure="headline">
      <outline text="Install orca from here: https://github.com/abo-abo/orca https://oremacs.com/2017/10/28/orca/" structure="paragraph"/>
      <outline text="ORg-CApture lisp of recipes" structure="paragraph"/>
    </outline>
    <outline text="Epresent" structure="headline">
      <outline text="Epresent does not work with evil-mode You have to disable it" structure="paragraph"/>
    </outline>
    <outline text="Org-present" structure="headline">
      <outline text="Org-present-remote" structure="headline"/>
    </outline>
    <outline text="emacs-reveal" structure="headline">
      <outline text="https://gitlab.com/oer/emacs-reveal" structure="paragraph"/>
    </outline>
    <outline text="Org reveal" structure="headline">
      <outline text="https://orgmode.org/worg/org-tutorials/non-beamer-presentations.html https://github.com/yjwen/org-reveal https://github.com/hakimel/reveal.js/ http://scottnesbitt.io/2017/01/24/org-reveal/ https://nwidger.github.io/blog/post/making-a-reveal.js-presentation-with-org-reveal/ http://jr0cket.co.uk/slides/revealjs.html" structure="paragraph"/>
      <outline text="Reveal.js - for creating slides like Beamer" structure="paragraph"/>
    </outline>
    <outline text="Org-re-reveal" structure="headline">
      <outline text="https://gitlab.com/oer/org-re-reveal Type &#x201C;M-x load-library&#x201D;, then &#x201C;org-re-reveal&#x201D;" structure="paragraph"/>
    </outline>
    <outline text="org-re-reveal-ref" structure="headline">
      <outline text=" [ https ://gitlab .com/oer/emacs-reveal] type &#x201C;m-x load-library&#x201D;, then &#x201C;org-re-reveal-ref&#x201D;" structure="paragraph"/>
    </outline>
    <outline text="oer-reveal" structure="headline">
      <outline text="https://gitlab.com/oer/emacs-reveal type &quot;m-x load-library&quot;, then &quot;oer-reveal&quot;" structure="paragraph"/>
    </outline>
    <outline text="Spectacle" structure="headline">
      <outline text="https://github.com/lorniu/ox-spectacle/blob/9d3ec9a6326289074d8620e97d65e3105307ff51/spectacle-demo.org" structure="paragraph"/>
      <outline text="ox-spectacle for presentations type &quot;M-x load-library&quot;, then &quot;ox-spectacle&quot; M-x ox-spectacle-help Ctrl-C Ctrl-E s f for exporting" structure="paragraph"/>
    </outline>
    <outline text="Org-tree-slide" structure="headline">
      <outline text="https://wolfecub.github.io/dotfiles/#org90e980d https://orgmode.org/worg/org-tutorials/non-beamer-presentations.html" structure="paragraph"/>
      <outline text="Call: org-tree-slide-mode org-tree-slide-presentation-profile org-tree-slide-display-header-toggle org-insert-link if you want to insert images org-toggle-inline-images if you want to toogle them" structure="paragraph"/>
    </outline>
    <outline text="Ox-pandoc" structure="headline">
      <outline text="https://pandoc.org/MANUAL.html#producing-slide-shows-with-pandoc M-x load-library RET ox-pandoc" structure="paragraph"/>
    </outline>
    <outline text="Persistent-soft" structure="headline">
      <outline text="https://github.com/rolandwalker/persistent-soft" structure="paragraph"/>
    </outline>
    <outline text="Polymode" structure="headline">
      <outline text="https://polymode.github.io/installation/ for working with R code, Rstudio and Rmarkdown - &quot;.Rmd&quot; files For Academic papers Install from MELPA: polymode, poly-markdown and &quot;ess*&quot; packages" structure="paragraph"/>
    </outline>
    <outline text="Poetry-mode" structure="headline">
      <outline text="http://www.bobnewell.net/filez/poetry.el" structure="paragraph"/>
      <outline text="Install w3m on debian and emacs Put poetry.el inside ~/.emacs.d/elpa/poetry/ Byte compile it with:" structure="paragraph"/>
      <outline text="Instrall rhyme - ~/Downloads/rhyme" structure="paragraph"/>
      <outline text="emacs --batch --eval '(byte-compile-file &quot;~/.emacs.d/elpa/poetry/poetry.el&quot;)'" structure="paragraph"/>
    </outline>
    <outline text="People with nice emacs config files" structure="headline">
      <outline text="List of people with nice emacs dotfiles files and some video tutorials:" structure="paragraph"/>
      <outline text="https://github.com/valignatev/dotfiles https://invidio.us/latest_version?id=FYPE0dIoq1I&amp;itag=43" structure="paragraph"/>
      <outline text="https://cestlaz.github.io/stories/emacs/" structure="paragraph"/>
      <outline text="http://www.coli.uni-saarland.de/~slemaguer/emacs/main.html" structure="paragraph"/>
      <outline text="https://zzamboni.org/post/my-emacs-configuration-with-commentary/" structure="paragraph"/>
      <outline text="https://github.com/caisah/emacs.dz https://github.com/DiegoVicen/my-emacs#my-blog-publishing-configuration https://github.com/myTerminal/super-emacs" structure="paragraph"/>
    </outline>
    <outline text="Perspective" structure="headline">
      <outline text="https://github.com/nex3/perspective-el call it with &quot;persp-mode&quot;" structure="paragraph"/>
    </outline>
    <outline text="Powerline" structure="headline"/>
    <outline text="Prolog" structure="headline"/>
    <outline text="Quelpa" structure="headline"/>
    <outline text="Re-builder for Regexp" structure="headline"/>
    <outline text="Slime" structure="headline"/>
    <outline text="Smex" structure="headline"/>
    <outline text="Speed directories and files" structure="headline"/>
    <outline text="Splash-screen" structure="headline">
      <outline text="https://github.com/rakanalh/emacs-dashboard" structure="paragraph"/>
    </outline>
    <outline text="Scheme" structure="headline">
      <outline text="Set the Scheme environment in emacs" structure="paragraph"/>
      <outline text="apt install racket guile" structure="list"/>
      <outline text="Alt-x package-install RET geiser" structure="list"/>
      <outline text="Alt-x package-install RET scheme-complete" structure="list"/>
      <outline text="Then in emacs to get the REPL, do:" structure="paragraph"/>
      <outline text="Alt-x run-geiser" structure="paragraph"/>
      <outline text="you can save scheme files as: $file.ss our $file.scm" structure="paragraph"/>
    </outline>
    <outline text="Shackle" structure="headline"/>
    <outline text="Synonyms and Thesaurus" structure="headline"/>
    <outline text="Sword-to-org" structure="headline">
      <outline text="https://github.com/alphapapa/sword-to-org" structure="paragraph"/>
    </outline>
    <outline text="Telega" structure="headline">
      <outline text="telega.el requires at least GNU emacs 26.1 with imagemagick and svg support" structure="paragraph"/>
      <outline text="https://github.com/zevlg/telega.el" structure="paragraph"/>
    </outline>
    <outline text="Text-translation" structure="headline">
      <outline text="https://www.emacswiki.org/emacs/TextTranslator" structure="paragraph"/>
      <outline text="bzr branch lp:~khiker/+junk/text-translator" structure="paragraph"/>
    </outline>
    <outline text="Text-scale" structure="headline"/>
    <outline text="Tramp" structure="headline">
      <outline text="https://www.gnu.org/software/tramp/" structure="paragraph"/>
      <outline text="Quick-start tramp" structure="paragraph"/>
      <outline text="Faster than the default scp" structure="paragraph"/>
      <outline text="C-x C-f /remotehost:filename RET (or /method:user@remotehost:filename) C-x C-f /[method/user@remotehost]/filename" structure="paragraph"/>
      <outline text="You can also edit local files as root with either of the following (note the double colon, which is required)" structure="paragraph"/>
      <outline text="C-x C-f /su::/etc/hosts C-x C-f /sudo::/etc/hosts" structure="paragraph"/>
      <outline text="Also trump now integrates well with eShell" structure="paragraph"/>
      <outline text="Windows with Cygwin tools installed, assuming no password is required" structure="paragraph"/>
      <outline text="(setq tramp-default-method &quot;sshx&quot;)" structure="paragraph"/>
    </outline>
    <outline text="Treemacs" structure="headline">
      <outline text="Treemacs requires at leaste emacs 25.2" structure="paragraph"/>
    </outline>
    <outline text="Trident convert lisp 2 javascript" structure="headline">
      <outline text="https://github.com/johnmastro/trident-mode.el" structure="paragraph"/>
      <outline text="Install packages dash, slime and trident" structure="paragraph"/>
    </outline>
    <outline text="Unicode-fonts" structure="headline"/>
    <outline text="Visual-regexp-steroids" structure="headline"/>
    <outline text="Emacs-w3m" structure="headline">
      <outline text="http://emacs-w3m.namazu.org/#requirements Install it with cvs -&gt; autoconf &amp;&amp; ./configure &amp;&amp; sudo make install" structure="paragraph"/>
      <outline text="or github -&gt; https://github.com/emacs-w3m/emacs-w3m https://www.emacswiki.org/emacs/emacs-w3m Install apel --&gt; with package-install Install flim --&gt; with package-install http://emacs-w3m.namazu.org/info/emacs-w3m.html#SEC_Top Just type Alt-x w3m, and you can use emacs-w3m" structure="paragraph"/>
    </outline>
    <outline text="Wanderlust email-client" structure="headline"/>
    <outline text="Winner-mode" structure="headline"/>
    <outline text="Wrap lines" structure="headline"/>
    <outline text="Youtube-dl" structure="headline">
      <outline text="This youtube-dl is different from the CLI one Because only downloads videos from YT site itself gitc https://github.com/skeeto/youtube-dl-emacs.git https://next.atlas.engineer/article/emacs-hacks.org" structure="paragraph"/>
    </outline>
    <outline text="Elisp" structure="headline">
      <outline text="https://github.com/a13/emacs.d" structure="paragraph"/>
    </outline>
    <outline text="Network" structure="headline"/>
    <outline text="Save-place" structure="headline"/>
    <outline text="shell-pop" structure="headline"/>
    <outline text="Simple-mpc" structure="headline"/>
    <outline text="Command-log-mode" structure="headline">
      <outline text="You can also use screenkey for emacs and vim" structure="paragraph"/>
    </outline>
    <outline text="Circe" structure="headline"/>
    <outline text="Emms-get-lyrics" structure="headline"/>
    <outline text="MPV as a player" structure="headline"/>
    <outline text="memacs" structure="headline">
      <outline text="sudo pip install memacs" structure="paragraph"/>
    </outline>
    <outline text="Genealogy" structure="headline">
      <outline text="http://lifelines.sourceforge.net/faq.html Lifelines -&gt; apt install lifelines lifelines-doc lifelines-report seek for lines-mode.el" structure="paragraph"/>
      <outline text="https://homepages.rootsweb.com/~pmcbride/gedcom/55gctoc.htm Gedcom https://github.com/benanhalt/gedcom http://lifelines.wikidot.com/editing-gedcom https://www.rootsweb.com/ https://medium.com/or%C3%ADgenes-online/qu%C3%A9-es-un-archivo-gedcom-y-c%C3%B3mo-se-utiliza-6a6da7c78ac http://wiki-en.genealogy.net/Gedcom_5.5EL https://homepages.rootsweb.com/~pmcbride/gedcom/55gcch2.htm" structure="paragraph"/>
      <outline text="See: gramps as well https://gramps-project.org/introduction-WP/ https://www.gramps-project.org/wiki/index.php/GEDCOM_Extensions" structure="paragraph"/>
    </outline>
    <outline text="Defaults apps" structure="headline"/>
    <outline text="org-chef" structure="headline">
      <outline text="https://github.com/Chobbes/org-chef" structure="paragraph"/>
      <outline text="Supported sites" structure="paragraph"/>
      <outline text="http://allrecipes.com/ http://www.geniuskitchen.com/ https://www.simplyrecipes.com/ https://www.marthastewart.com/ https://www.budgetbytes.com/ https://www.culturesforhealth.com/ https://www.seriouseats.com/ http://www.marmiton.org/ (french) https://www.reluctantgourmet.com/ https://www.chefkoch.de/ https://steamykitchen.com/ https://showmetheyummy.com/ https://nytimes.com/ http://www.xiachufang.com/ (&#x4E0B;&#x53A8;&#x623F; Chinese) https://www.finecooking.com/" structure="paragraph"/>
    </outline>
    <outline text="Blogging with emacs" structure="headline">
      <outline text="https://diego.codes/post/blogging-with-org/ https://github.com/DiegoVicen/my-emacs#my-blog-publishing-configuration https://ambrevar.xyz/blog-architecture/" structure="paragraph"/>
      <outline text="Org2blog" structure="headline">
        <outline text="Hugo is better than org2blog" structure="paragraph"/>
        <outline text="Blogging to WordPress, using emacs" structure="paragraph"/>
        <outline text="https://arenzana.org/2019/04/blogging-with-org-mode/ https://github.com/org2blog/org2blog https://happytowander.com/create-self-hosted-wordpress-blog-free/" structure="paragraph"/>
      </outline>
      <outline text="Ox-hugo" structure="headline">
        <outline text="Hugo is better than org2blog https://gohugo.io/getting-started/quick-start/ https://zzamboni.org/post/my-emacs-configuration-with-commentary/ How to set up hugo: apt install hugo then: cd ~/org~/ and issue hugo new site blog cd ~/org~/blog git init Then add a theme: cd ~/org~/blog/themes/ git submodule add https://github.com/budparr/gohugo-theme-ananke.git ananke cd .. echo 'theme = &quot;ananke&quot;' &gt;&gt; config.toml hugo new posts/my-first-post.md Edit the my-first-post.md cd ~/org~/blog then start the server hugo server -D open it in: http://localhost:1313/ in emacs it is &quot;org-hugo&quot;" structure="paragraph"/>
        <outline text="https://gohugo.io/hosting-and-deployment/hosting-on-gitlab/ https://gohugo.io/hosting-and-deployment/hosting-on-netlify/" structure="paragraph"/>
      </outline>
      <outline text="Easy-hugo" structure="headline">
        <outline text="https://github.com/masasam/emacs-easy-hugo https://gohugo.io/tools/editors/#emacs https://ox-hugo.scripter.co/" structure="paragraph"/>
      </outline>
      <outline text="Lazyblorg" structure="headline">
        <outline text="https://github.com/novoid/lazyblorg ~/Downloads/lazyblorg/" structure="paragraph"/>
        <outline text="Installing:" structure="paragraph"/>
        <outline text="sudo pip install memacs sudo apt install python3-werkzeug sudo apt install pandoc sudo pip install python3-pypandoc sudo apt install python3-opencv sudo npm install -g sass git clone https://github.com/novoid/lazyblorg.git cd ~/Downloads/lazyblorg/ ./example_invocation.sh" structure="paragraph"/>
      </outline>
    </outline>
    <outline text="Org-refile" structure="headline">
      <outline text="https://www.reddit.com/r/emacs/comments/4366f9/how_do_orgrefiletargets_work/" structure="paragraph"/>
    </outline>
    <outline text="Org-capture" structure="headline">
      <outline text="Download the org-capture addon for Firefox and Chromium [[http://chadok.info/firefox-org-capture/][org-capture.xpi]]" structure="paragraph"/>
      <outline text="You have to install org-plus-contrib" structure="paragraph"/>
    </outline>
    <outline text="Hyperbole" structure="headline"/>
    <outline text="Eww" structure="headline"/>
    <outline text="Printer" structure="headline">
      <outline text="Use Alt-x lpr-* and Alt-x pr-* Commands for printing" structure="paragraph"/>
    </outline>
    <outline text="Emacs server" structure="headline"/>
    <outline text="epg-gpg2" structure="headline">
      <outline text="you have to Alt-x package-install RET pinentry" structure="paragraph"/>
    </outline>
    <outline text="bbdb-database" structure="headline"/>
    <outline text="ipp Printer" structure="headline"/>
    <outline text="Linguistics" structure="headline"/>
    <outline text="Org-drill" structure="headline"/>
    <outline text="Org-drill-table" structure="headline"/>
    <outline text="Memrise" structure="headline"/>
    <outline text="Gnutls-fix-bug" structure="headline">
      <outline text="fix the gnutls bug for emacs26.1" structure="paragraph"/>
    </outline>
    <outline text="emacs-wget" structure="headline">
      <outline text="https://github.com/ataka/emacs-wget see also the file $HOME/.wgetrc" structure="paragraph"/>
    </outline>
    <outline text="More niceties" structure="headline">
      <outline text="More nice stuff Configuring Emacs from scratch part 1 https://invidio.us/latest_version?id=FYPE0dIoq1I&amp;itag=43" structure="paragraph"/>
    </outline>
    <outline text="Better shell" structure="headline"/>
    <outline text="Virtualenv" structure="headline"/>
    <outline text="Time in mode-line" structure="headline">
      <outline text="https://ivanmalison.github.io/dotfiles/#about" structure="paragraph"/>
    </outline>
    <outline text="Long lines" structure="headline">
      <outline text="you can use: auto-fill-mode, truncate-lines, line ending, long-lines, visual-line-mode, format=flowed, fill-paragraph [unfill-paragraph] - most of them for displaying purpose" structure="paragraph"/>
      <outline text="https://www.emacswiki.org/emacs/LineWrap#searchlang" structure="paragraph"/>
    </outline>
    <outline text="evil-macros keys" structure="headline"/>
    <outline text="emacros" structure="headline">
      <outline text="http://thbecker.net/free_software_utilities/emacs_lisp/emacros/emacros.html" structure="paragraph"/>
      <outline text="For making macros in emacs you have to: turn-off-evil-mode global-auto-complete-mode fundamental-mode" structure="paragraph"/>
    </outline>
    <outline text="Zoom-frm" structure="headline">
      <outline text="For hycontrol-frame or hycontrol-windows from Hyperbole to have zoom in-out, install zoom-frm, frame-cmds and frame-fns with el-get-install and put all their &quot;.el(c)&quot; files inside the zoom-frm load-path for using Hyperbole in Stumpwm, your have to &quot;float-this&quot; for emacs" structure="paragraph"/>
    </outline>
    <outline text="openwith" structure="headline">
      <outline text="[[https://stackoverflow.com/questions/51006855/open-mp4-files-from-orgmode][files]]" structure="paragraph"/>
    </outline>
    <outline text="org-mind-map" structure="headline">
      <outline text="https://github.com/theodorewiles/org-mind-map" structure="paragraph"/>
      <outline text="This is an Emacs package that creates graphviz directed graphs from the headings of an org file" structure="paragraph"/>
    </outline>
    <outline text="org-opml" structure="headline">
      <outline text="https://github.com/org-opml/org-opml" structure="paragraph"/>
      <outline text="Usage:" structure="paragraph"/>
      <outline text="C-c C-e m" structure="paragraph"/>
      <outline text="load-library org-opml RET Org mode -&gt; OPML export by typing C-c C-e m in an open Org mode file Then open the opml file with &quot;freemind.sh&quot; from /opt/freemind" structure="paragraph"/>
    </outline>
  </body>
</opml>
